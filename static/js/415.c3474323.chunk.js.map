{"version":3,"file":"static/js/415.c3474323.chunk.js","mappings":"6LAEaA,E,OAAYC,GAAAA,GAAH,wF,SCCTC,EAAa,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MAEnC,OACE,0BACE,wBACGD,EAAOE,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAME,IAAMJ,MAAOA,EAAxC,UACE,uBAAIE,EAAMG,WAFEH,EAAME,GADP,OAUxB,C,oICuBD,UAnCa,WACX,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAeQ,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdJ,GAAa,GAFC,UAGOK,EAAAA,EAAAA,MAHP,OAGRf,EAHQ,OAIdQ,GAAU,OAAIR,IAJA,gDAMdgB,QAAQC,IAAR,MANc,yBAQdP,GAAa,GARC,4EAAH,qDAYfI,GACD,GAAE,KAED,0BACGL,GACC,wBACE,SAAC,IAAD,OAGF,SAAC,IAAD,CAAYT,OAAQA,EAAQC,MAAO,CAAEiB,KAAMP,MAIlD,C,+LCrCKQ,EAAW,+BACXC,EAAU,mCAET,SAAeL,IAAtB,+B,aAAO,O,oBAAA,2GAAiCM,EAAjC,+BAAwC,EAAxC,SAEGC,EAAS,CACbC,QAASH,EACTI,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAClBN,EADkB,qCACmBE,GACxC,CAAEC,OAAAA,IARD,cAMGI,EANH,yBAWIA,EAASC,KAAKC,SAXlB,gCAaHZ,QAAQC,IAAR,MAbG,iFAkBA,SAAeY,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,yFAEGR,EAAS,CACbC,QAASH,EACTI,SAAU,QACVO,MAAOD,EACPT,KAAM,GANL,SAQoBI,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAAuC,CAC5DG,OAAAA,IATC,cAQGI,EARH,yBAYIA,EAASC,KAAKC,SAZlB,gCAcHZ,QAAQC,IAAR,MAdG,gFAoBA,SAAee,EAAtB,kC,aAAO,O,oBAAA,WAA+B3B,GAA/B,yFAEGiB,EAAS,CACbC,QAASH,EACTI,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+Bd,EAA/B,KAAsC,CAC3DiB,OAAAA,IAPC,cAMGI,EANH,yBAUIA,EAASC,MAVb,gCAYHX,QAAQC,IAAR,MAZG,gFAmBA,SAAegB,EAAtB,kC,aAAO,O,oBAAA,WAA4B5B,GAA5B,yFAEGiB,EAAS,CACbC,QAASH,EACTI,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+Bd,EAA/B,aAA8C,CACnEiB,OAAAA,IAPC,cAMGI,EANH,yBAUIA,EAASC,KAAKO,MAVlB,gCAYHlB,QAAQC,IAAR,MAZG,gFAmBA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAA+B9B,GAA/B,yFAEGiB,EAAS,CACbC,QAASH,EACTI,SAAU,QACVH,KAAM,GALL,SAOoBI,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAA+Bd,EAA/B,aAA8C,CACnEiB,OAAAA,IARC,cAOGI,EAPH,yBAWIA,EAASC,KAAKC,SAXlB,gCAaHZ,QAAQC,IAAR,MAbG,gF","sources":["components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/moviesAPI.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n  margin-bottom: 15px;\n  color: #212121;\n  font-weight: 500;\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieItem } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies, state }) => {\n  // console.log(movies);\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => (\n          <MovieItem key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={state}>\n              <p>{movie.title}</p>\n            </Link>\n          </MovieItem>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import { MoviesList } from 'components/MoviesList/MoviesList';\nimport { useState, useEffect } from 'react';\nimport { getTrendingMovies } from '../services/moviesAPI';\nimport { useLocation } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const location = useLocation();\n  // console.log(location);\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movies = await getTrendingMovies();\n        setMovies([...movies]);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovies();\n  }, []);\n  return (\n    <main>\n      {isLoading ? (\n        <p>\n          <Loader />\n        </p>\n      ) : (\n        <MoviesList movies={movies} state={{ from: location }} />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '169863a84bc27c731fc45c45dd4a4a7e';\n\nexport async function getTrendingMovies(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?page=${page}`,\n      { params }\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// getTrendingMovies();\n\nexport async function getMoviesBySearch(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie?`, {\n      params,\n    });\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// getMoviesBySearch('cat');\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n      params,\n    });\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieDetails(id);\n\nexport async function getMovieCast(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    // console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieCast(id);\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieReviews(id);\n"],"names":["MovieItem","styled","MoviesList","movies","state","map","movie","to","id","title","useState","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","getMovies","getTrendingMovies","console","log","from","BASE_URL","API_KEY","page","params","api_key","language","axios","response","data","results","getMoviesBySearch","name","query","getMovieDetails","getMovieCast","cast","getMovieReviews"],"sourceRoot":""}