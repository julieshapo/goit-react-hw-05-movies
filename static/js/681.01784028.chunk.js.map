{"version":3,"file":"static/js/681.01784028.chunk.js","mappings":"yNAyCA,UArCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,WAAMH,GAAN,iGAEWI,EAAAA,EAAAA,IAAgBJ,GAF3B,OAETK,EAFS,OAGfN,EAAWM,GAHI,gDAKfC,QAAQC,IAAR,MALe,yDAAH,sDAShBJ,EAAWH,EACZ,GAAE,CAACA,KAGF,4BACE,oCACCF,EAAQU,QACP,gCACGV,QADH,IACGA,OADH,EACGA,EAASW,KAAI,SAAAC,GAAM,OAClB,4BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFHF,EAAOG,GADC,OAQtB,iEAIP,C,+LCrCKC,EAAW,+BACXC,EAAU,mCAET,SAAeC,IAAtB,+B,aAAO,O,oBAAA,2GAAiCC,EAAjC,+BAAwC,EAAxC,SAEGC,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAClBP,EADkB,qCACmBG,GACxC,CAAEC,OAAAA,IARD,cAMGI,EANH,yBAWIA,EAASC,KAAKC,SAXlB,gCAaHlB,QAAQC,IAAR,MAbG,iFAkBA,SAAekB,EAAtB,kC,aAAO,O,oBAAA,WAAiCC,GAAjC,yFAEGR,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVO,MAAOD,EACPT,KAAM,GANL,SAQoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAAuC,CAC5DI,OAAAA,IATC,cAQGI,EARH,yBAYIA,EAASC,KAAKC,SAZlB,gCAcHlB,QAAQC,IAAR,MAdG,gFAoBA,SAAeqB,EAAtB,kC,aAAO,O,oBAAA,WAA+Bf,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BD,EAA/B,KAAsC,CAC3DK,OAAAA,IAPC,cAMGI,EANH,yBAUIA,EAASC,MAVb,gCAYHjB,QAAQC,IAAR,MAZG,gFAmBA,SAAesB,EAAtB,kC,aAAO,O,oBAAA,WAA4BhB,GAA5B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,SAJT,SAMoBC,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BD,EAA/B,aAA8C,CACnEK,OAAAA,IAPC,cAMGI,EANH,yBAUIA,EAASC,KAAKO,MAVlB,gCAYHxB,QAAQC,IAAR,MAZG,gFAmBA,SAAeH,EAAtB,kC,aAAO,O,oBAAA,WAA+BS,GAA/B,yFAEGK,EAAS,CACbC,QAASJ,EACTK,SAAU,QACVH,KAAM,GALL,SAOoBI,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BD,EAA/B,aAA8C,CACnEK,OAAAA,IARC,cAOGI,EAPH,yBAWIA,EAASC,KAAKC,SAXlB,gCAaHlB,QAAQC,IAAR,MAbG,gF","sources":["components/Reviews.jsx","services/moviesAPI.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/moviesAPI';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getReviews = async movieId => {\n      try {\n        const reviewsData = await getMovieReviews(movieId);\n        setReviews(reviewsData);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviews(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Reviews</h2>\n      {reviews.length ? (\n        <div>\n          {reviews?.map(review => (\n            <div key={review.id}>\n              <h3>Author: {review.author}</h3>\n              <p>{review.content}</p>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <p>There are no reviews for that movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '169863a84bc27c731fc45c45dd4a4a7e';\n\nexport async function getTrendingMovies(page = 1) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(\n      `${BASE_URL}/trending/movie/week?page=${page}`,\n      { params }\n    );\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n// getTrendingMovies();\n\nexport async function getMoviesBySearch(name) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/search/movie?`, {\n      params,\n    });\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// getMoviesBySearch('cat');\n\nexport async function getMovieDetails(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}?`, {\n      params,\n    });\n    // console.log(response.data);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieDetails(id);\n\nexport async function getMovieCast(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/credits?`, {\n      params,\n    });\n    // console.log(response.data.cast);\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieCast(id);\n\nexport async function getMovieReviews(id) {\n  try {\n    const params = {\n      api_key: API_KEY,\n      language: 'en-US',\n      page: 1,\n    };\n    const response = await axios.get(`${BASE_URL}/movie/${id}/reviews?`, {\n      params,\n    });\n    // console.log(response.data.results);\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// const id = 447365;\n// getMovieReviews(id);\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","getMovieReviews","reviewsData","console","log","length","map","review","author","content","id","BASE_URL","API_KEY","getTrendingMovies","page","params","api_key","language","axios","response","data","results","getMoviesBySearch","name","query","getMovieDetails","getMovieCast","cast"],"sourceRoot":""}